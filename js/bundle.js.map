{"version":3,"sources":["webpack:///webpack/bootstrap 7e9061577ab0252639dc","webpack:///./js/main.js","webpack:///./js/game.jsx","webpack:///./js/gem.jsx","webpack:///./js/grid.jsx"],"names":["$","document","ready","game","instance","Game","grid_size","grid","Phaser","width","height","AUTO","preload","create","update","enableDebug","load","atlasJSONHash","GameSingleton","gem_prefixs","gem_size","w","h","m","Gem","gemType","xPos","yPos","phaser","rnd","integerInRange","length","name","sprite","add","otherGem","gem","left","right","up","down","isMatch","hasMatch","direction","matches","next","currMatches","GridElement","gridPos","otherGridEl","Grid","x","y","i","Array","fill","map","xV","xI","xArr","yV","yI","yArr","console","log"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7e9061577ab0252639dc","import Game from './game.jsx';\n\n$(document).ready(function(){\n  var game = Game.instance;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./js/main.js","import Gem from './gem.jsx';\nimport Grid from './grid.jsx';\n\nclass Game {\n  get phaser(){ return this.game; }\n\n  constructor(){\n    this.grid_size = [15, 9];\n    this.grid = null;\n    this.game = new Phaser.Game(this.grid_size[0] * Gem.width, this.grid_size[1] * Gem.height, Phaser.AUTO, 'game-canvas', {\n      preload: () => this.preload(),\n      create: () => this.create(),\n      update: () => this.update(),\n      enableDebug: false\n    });\n  }\n\n  preload(){\n    this.game.load.atlasJSONHash('gems', 'images/gems.png', 'images/gems-hash.json');\n  }\n\n  create(){\n    this.grid = new Grid(this.grid_size[0], this.grid_size[1])\n  }\n\n  update(){\n\n  }\n}\n\nvar instance = null;\nclass GameSingleton{\n  static get instance(){\n    if(!instance){\n      instance = new Game();\n    }\n\n    return instance;\n  }\n}\n\nexport default GameSingleton;\n\n\n\n// WEBPACK FOOTER //\n// ./js/game.jsx","import Game from './game.jsx';\n\nconst gem_prefixs = [\n  'yellow', 'blue', 'green', 'red', 'purple', 'pink'\n];\n\nconst gem_size = {\n  w: 55,\n  h: 82,\n  m: 5\n};\n\nclass Gem{\n  static get width(){ return gem_size.w; }\n  static get height(){ return gem_size.h; }\n  static get margin(){ return gem_size.m; }\n\n  get margin(){ return this.gemType; }\n\n  constructor(xPos, yPos){\n    this.gemType = Game.instance.phaser.rnd.integerInRange(0, gem_prefixs.length-1);\n    this.name = gem_prefixs[ this.gemType ] + '_gem_1';\n    this.sprite = Game.instance.phaser.add.sprite(xPos, yPos, 'gems', this.name);\n  }\n\n  isMatch(otherGem){\n    return this.gemType === otherGem.gemType;\n  }\n}\n\nvar gem = function(left, right, up, down){\n  this.isMatch = function(gem){\n    return this.gemType === gem.gemType;\n  };\n\n  this.hasMatch = function(direction){\n    if(typeof direction !== 'undefined'){\n      return this.isMatch(this[direction]) ? (this[direction].hasMatch(direction) + 1) : 0;\n    }else{\n      var matches = 0;\n      for(var next in ['up', 'down', 'left', 'right']){\n        if(this.isMatch(this[next])){\n          var currMatches = this[next].hasMatch(next);\n          if(currMatches > 3){\n            matches += currMatches;\n          }\n        }\n      }\n\n      return matches;\n    }\n  }\n};\n\nexport default Gem;\n\n\n\n// WEBPACK FOOTER //\n// ./js/gem.jsx","import Gem from './gem.jsx';\n\n/*\n  Grid position is going from left to right and top to bottom\n  ie a 2x2 grid would have the positions like so\n  -----\n  |1|2|\n  |3|4|\n  ----\n*/\n\nclass GridElement{\n  constructor(xPos, yPos, gridPos){\n    this.xPos = xPos;\n    this.yPos = yPos;\n    this.gridPos = gridPos;\n\n    this.gem = new Gem(this.xPos, this.yPos);\n  }\n\n  swap(otherGridEl){\n\n  }\n}\n\nclass Grid{\n  constructor(x, y){\n\n    this.width = x;\n    this.height = y;\n\n    var i = 1;\n    this.grid = Array(x).fill().map((xV, xI, xArr) => {\n      return Array(y).fill().map((yV, yI, yArr) => {\n        var xPos = ((xI + 1) * Gem.width) - Gem.width,\n            yPos = ((yI + 1) * Gem.height) - Gem.height;\n\n        return new GridElement(xPos, yPos, i++);\n      });\n    });\n\n    console.log(this, i)\n  }\n}\n\nexport default Grid;\n\n\n\n// WEBPACK FOOTER //\n// ./js/grid.jsx"],"sourceRoot":""}